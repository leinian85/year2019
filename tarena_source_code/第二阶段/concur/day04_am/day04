前情回顾

1. 进程间通信
   * 管道通信  Pipe()  p.send()  p.recv()
   * 消息队列  Queue()  q.get()  q.put()
   * 共享内存  Value()  Array()
   * 信号量  Semaphore() acquire()  release()

2. threading 创建线程

   Thread() 创建线程对象
   start() 启动线程
   join() 回收线程

3. 线程属性  name  is_alive()  daemon

4. 自定义线程类: 继承Thread 重写__init__,run

5. 线程的同步互斥

   同步互斥方法： Event()  wait() set() clear()
                Lock()  acquire()  release()

   死锁 ： 由于上锁造成的程序阻塞
*******************************************

效率测试：

Single cpu: 7.473996162414551
Single IO: 4.414734601974487

Process cpu: 3.5106594562530518
Process io: 2.2661991119384766

Thread cpu: 6.507769346237183
Thread io: 5.191030502319336

练习 ： 根据fork多进程并发网络模型思路
       完成基于process的多进程并发网络模型











